// Code generated by mockery v2.51.0. DO NOT EDIT.

package mocks

import (
	context "context"

	domain "github.com/igorscandido/go-transactions-api/internal/domain"
	mock "github.com/stretchr/testify/mock"
)

// RatesClient is an autogenerated mock type for the RatesClient type
type RatesClient struct {
	mock.Mock
}

// GetLatestRatesBasedOn provides a mock function with given fields: ctx, baseCurrency
func (_m *RatesClient) GetLatestRatesBasedOn(ctx context.Context, baseCurrency string) (*domain.CurrencyRates, error) {
	ret := _m.Called(ctx, baseCurrency)

	if len(ret) == 0 {
		panic("no return value specified for GetLatestRatesBasedOn")
	}

	var r0 *domain.CurrencyRates
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, string) (*domain.CurrencyRates, error)); ok {
		return rf(ctx, baseCurrency)
	}
	if rf, ok := ret.Get(0).(func(context.Context, string) *domain.CurrencyRates); ok {
		r0 = rf(ctx, baseCurrency)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*domain.CurrencyRates)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, baseCurrency)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewRatesClient creates a new instance of RatesClient. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewRatesClient(t interface {
	mock.TestingT
	Cleanup(func())
}) *RatesClient {
	mock := &RatesClient{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
